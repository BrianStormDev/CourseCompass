{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gameb\\\\Desktop\\\\CourseCompass\\\\my-app\\\\src\\\\Chart.js\",\n  _s = $RefreshSig$();\n// chart.js\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  colors = ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#F97316']\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch('/api/chart');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setChartData(data);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching chart data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChartData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-tracker-card ml-tracker-chart-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"ml-tracker-section-title ml-tracker-chart-title\",\n        children: \"Research Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-tracker-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400\",\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-tracker-card ml-tracker-chart-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"ml-tracker-section-title ml-tracker-chart-title\",\n        children: \"Research Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-tracker-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-400\",\n            children: [\"Error loading chart: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Get all keys except 'date' to create dynamic lines\n  const dataKeys = chartData && chartData.length > 0 ? Object.keys(chartData[0]).filter(key => key !== 'date') : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ml-tracker-card ml-tracker-chart-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ml-tracker-section-title ml-tracker-chart-title\",\n      children: \"Research Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-tracker-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 50\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#374151\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            stroke: \"#9CA3AF\",\n            fontSize: 12,\n            tickFormatter: value => new Date(value).toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#9CA3AF\",\n            fontSize: 12,\n            label: {\n              value: 'Papers Published',\n              angle: -90,\n              position: 'insideLeft',\n              style: {\n                textAnchor: 'middle',\n                fill: '#9CA3AF'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: '#1F2937',\n              border: '1px solid #374151',\n              borderRadius: '8px',\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), dataKeys.map((keyword, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: keyword,\n            stroke: colors[index % colors.length],\n            strokeWidth: 3,\n            dot: {\n              r: 4\n            },\n            activeDot: {\n              r: 6\n            }\n          }, keyword, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"/N1FfhlAfE3Gd6aiX9egY6Yx4fM=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Chart","colors","_s","chartData","setChartData","loading","setLoading","error","setError","fetchChartData","response","fetch","ok","Error","status","data","json","err","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dataKeys","length","Object","keys","filter","key","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","fontSize","tickFormatter","value","Date","toLocaleDateString","month","day","label","angle","position","style","textAnchor","fill","contentStyle","backgroundColor","border","borderRadius","color","map","keyword","index","type","strokeWidth","dot","r","activeDot","_c","$RefreshReg$"],"sources":["C:/Users/gameb/Desktop/CourseCompass/my-app/src/Chart.js"],"sourcesContent":["// chart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst Chart = ({ colors = ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#F97316'] }) => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch('/api/chart');\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setChartData(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error('Error fetching chart data:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChartData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"ml-tracker-card ml-tracker-chart-column\">\r\n        <h2 className=\"ml-tracker-section-title ml-tracker-chart-title\">\r\n          Research Trends\r\n        </h2>\r\n        <div className=\"ml-tracker-chart-container\">\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <div className=\"text-gray-400\">Loading chart data...</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"ml-tracker-card ml-tracker-chart-column\">\r\n        <h2 className=\"ml-tracker-section-title ml-tracker-chart-title\">\r\n          Research Trends\r\n        </h2>\r\n        <div className=\"ml-tracker-chart-container\">\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <div className=\"text-red-400\">Error loading chart: {error}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Get all keys except 'date' to create dynamic lines\r\n  const dataKeys = chartData && chartData.length > 0 \r\n    ? Object.keys(chartData[0]).filter(key => key !== 'date')\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"ml-tracker-card ml-tracker-chart-column\">\r\n      <h2 className=\"ml-tracker-section-title ml-tracker-chart-title\">\r\n        Research Trends\r\n      </h2>\r\n      <div className=\"ml-tracker-chart-container\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 50 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\r\n            <XAxis \r\n              dataKey=\"date\" \r\n              stroke=\"#9CA3AF\"\r\n              fontSize={12}\r\n              tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n            />\r\n            <YAxis \r\n              stroke=\"#9CA3AF\"\r\n              fontSize={12}\r\n              label={{ value: 'Papers Published', angle: -90, position: 'insideLeft', style: { textAnchor: 'middle', fill: '#9CA3AF' } }}\r\n            />\r\n            <Tooltip \r\n              contentStyle={{ \r\n                backgroundColor: '#1F2937', \r\n                border: '1px solid #374151',\r\n                borderRadius: '8px',\r\n                color: 'white'\r\n              }}\r\n            />\r\n            <Legend />\r\n            {dataKeys.map((keyword, index) => (\r\n              <Line \r\n                key={keyword}\r\n                type=\"monotone\" \r\n                dataKey={keyword} \r\n                stroke={colors[index % colors.length]}\r\n                strokeWidth={3}\r\n                dot={{ r: 4 }}\r\n                activeDot={{ r: 6 }}\r\n              />\r\n            ))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9G,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AAAE,CAAC,KAAK;EAAAC,EAAA;EACjG,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMoB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;QAE1C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCZ,YAAY,CAACW,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;QACrBC,OAAO,CAACZ,KAAK,CAAC,4BAA4B,EAAEU,GAAG,CAAC;MAClD,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBACEN,OAAA;MAAKqB,SAAS,EAAC,yCAAyC;MAAAC,QAAA,gBACtDtB,OAAA;QAAIqB,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL1B,OAAA;QAAKqB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,eACzCtB,OAAA;UAAKqB,SAAS,EAAC,yCAAyC;UAAAC,QAAA,eACtDtB,OAAA;YAAKqB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIlB,KAAK,EAAE;IACT,oBACER,OAAA;MAAKqB,SAAS,EAAC,yCAAyC;MAAAC,QAAA,gBACtDtB,OAAA;QAAIqB,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL1B,OAAA;QAAKqB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,eACzCtB,OAAA;UAAKqB,SAAS,EAAC,yCAAyC;UAAAC,QAAA,eACtDtB,OAAA;YAAKqB,SAAS,EAAC,cAAc;YAAAC,QAAA,GAAC,uBAAqB,EAACd,KAAK;UAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,MAAMC,QAAQ,GAAGvB,SAAS,IAAIA,SAAS,CAACwB,MAAM,GAAG,CAAC,GAC9CC,MAAM,CAACC,IAAI,CAAC1B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC2B,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,MAAM,CAAC,GACvD,EAAE;EAEN,oBACEhC,OAAA;IAAKqB,SAAS,EAAC,yCAAyC;IAAAC,QAAA,gBACtDtB,OAAA;MAAIqB,SAAS,EAAC,iDAAiD;MAAAC,QAAA,EAAC;IAEhE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL1B,OAAA;MAAKqB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzCtB,OAAA,CAACF,mBAAmB;QAACmC,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAAAZ,QAAA,eAC7CtB,OAAA,CAACT,SAAS;UAACyB,IAAI,EAAEZ,SAAU;UAAC+B,MAAM,EAAE;YAAEC,GAAG,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG,CAAE;UAAAjB,QAAA,gBAC/EtB,OAAA,CAACL,aAAa;YAAC6C,eAAe,EAAC,KAAK;YAACC,MAAM,EAAC;UAAS;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxD1B,OAAA,CAACP,KAAK;YACJiD,OAAO,EAAC,MAAM;YACdD,MAAM,EAAC,SAAS;YAChBE,QAAQ,EAAE,EAAG;YACbC,aAAa,EAAGC,KAAK,IAAK,IAAIC,IAAI,CAACD,KAAK,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;cAAEC,KAAK,EAAE,OAAO;cAAEC,GAAG,EAAE;YAAU,CAAC;UAAE;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3G,CAAC,eACF1B,OAAA,CAACN,KAAK;YACJ+C,MAAM,EAAC,SAAS;YAChBE,QAAQ,EAAE,EAAG;YACbO,KAAK,EAAE;cAAEL,KAAK,EAAE,kBAAkB;cAAEM,KAAK,EAAE,CAAC,EAAE;cAAEC,QAAQ,EAAE,YAAY;cAAEC,KAAK,EAAE;gBAAEC,UAAU,EAAE,QAAQ;gBAAEC,IAAI,EAAE;cAAU;YAAE;UAAE;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5H,CAAC,eACF1B,OAAA,CAACJ,OAAO;YACN4D,YAAY,EAAE;cACZC,eAAe,EAAE,SAAS;cAC1BC,MAAM,EAAE,mBAAmB;cAC3BC,YAAY,EAAE,KAAK;cACnBC,KAAK,EAAE;YACT;UAAE;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF1B,OAAA,CAACH,MAAM;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACTC,QAAQ,CAACkC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B/D,OAAA,CAACR,IAAI;YAEHwE,IAAI,EAAC,UAAU;YACftB,OAAO,EAAEoB,OAAQ;YACjBrB,MAAM,EAAEvC,MAAM,CAAC6D,KAAK,GAAG7D,MAAM,CAAC0B,MAAM,CAAE;YACtCqC,WAAW,EAAE,CAAE;YACfC,GAAG,EAAE;cAAEC,CAAC,EAAE;YAAE,CAAE;YACdC,SAAS,EAAE;cAAED,CAAC,EAAE;YAAE;UAAE,GANfL,OAAO;YAAAvC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOb,CACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5GIF,KAAK;AAAAoE,EAAA,GAALpE,KAAK;AA8GX,eAAeA,KAAK;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}